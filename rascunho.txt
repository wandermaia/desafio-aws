

Actions terraform

PIPELINE COMPLETA com Terraform, Github Actions e AWS (parece bom)
https://www.youtube.com/watch?v=1TNAUW7_bC0


Desafio DevOps com AWS + Terraform + GitHub Actions + eks
https://www.youtube.com/watch?v=OhV-pXgeVq4




Do ZERO ao DEPLOY com Terraform, AWS, Docker e SpringBoot
https://www.youtube.com/watch?v=OV3yhpqvRvo


tem alguns links interessantes
https://spacelift.io/blog/github-actions-terraform


Descrição interessante e tem link para o repositorio
https://medium.com/@joaomfilho1995/terraform-aws-e-github-actions-f9bc6544ac4b

Artigo da própria AWS
https://aws.amazon.com/pt/blogs/modernizing-with-aws/automate-microsoft-web-application-deployments-with-github-actions-and-terraform/

Como criar uma pipeline CI/CD com GitHub Actions | #DevOpsNaVeia 003
https://www.youtube.com/watch?v=TKwXC5qSjkE


How to Build AWS VPC using Terraform – Step by Step
https://spacelift.io/blog/terraform-aws-vpc


Creating a Secure and Scalable AWS VPC with Terraform
https://srivastavayushmaan1347.medium.com/creating-a-secure-and-scalable-aws-vpc-with-terraform-3270a189b228


How to Build AWS VPC Using Terraform - Step By Step
https://dev.to/aws-builders/how-to-build-aws-vpc-using-terraform-step-by-step-3k7f



AWS VPC e Terraform na Prática
https://www.youtube.com/watch?v=cQlS0QpGYSk



Native lock terraform
https://rafaelmedeiros94.medium.com/goodbye-dynamodb-terraform-s3-backend-now-supports-native-locking-06f74037ad39

+++++++++++++++++++++++++++++++++

Python e lambda com api gateway
https://www.youtube.com/watch?v=oT-P5jL9nrM

AWS Lambda Java: Como criar uma AWS Lambda com Java 21 gratuito
https://www.youtube.com/watch?v=_rRvhn_uNeM

++++++++++++++++++++++++++++++++++++++++++++++++++++++

eks

https://spacelift.io/blog/bootstrap-complete-amazon-eks-clusters-with-eks-blueprints-for-terraform


Create EKS Cluster with Terraform EKS Blueprints (esse parece legal, ainda está um pouco confuso)
https://www.youtube.com/watch?v=KE504NwP9vs


https://aws.amazon.com/pt/blogs/containers/bootstrapping-clusters-with-eks-blueprints/


Esse está muito bom simples e fácil de entender. Compensa ler o artigo e depois ver o código.
https://spacelift.io/blog/bootstrap-complete-amazon-eks-clusters-with-eks-blueprints-for-terraform
https://github.com/spacelift-io-blog-posts/Blog-Technical-Content/blob/master/eks-blueprints-terraform/main.tf



Amazon EKS Blueprints Teams Terraform module
https://registry.terraform.io/modules/aws-ia/eks-blueprints-teams/aws/latest




aws-auth Module

https://github.com/terraform-aws-modules/terraform-aws-eks/blob/master/modules/aws-auth/README.md


MODULE ALB

https://spacelift.io/blog/terraform-alb
https://registry.terraform.io/modules/terraform-aws-modules/alb/aws/latest


++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Execução manual

terraform init \
    -backend-config="bucket=wandermaia-terraform-statefile" \
    -backend-config="key=desafio-aws" \
    -backend-config="region=us-east-1" \
    -backend-config="encrypt=true" \
    -backend-config="use_lockfile=true"


terraform validate


terraform workspace select dev || terraform workspace new dev && terraform plan -var-file="./envs/dev/terraform.tfvars" -out="dev.plan"

Apply

terraform workspace select dev || terraform workspace new dev && terraform apply "dev.plan"


Destroy

terraform workspace select dev || terraform workspace new dev && terraform destroy -var-file="./envs/dev/terraform.tfvars" -auto-approve



# sudo apt update
# sudo apt install mysql-client -y
# mysql -h rds-msql-dev.cilkaqg0kfik.us-east-1.rds.amazonaws.com -P 3306 -udbuser -pdbpassword -D mydb
#
# mysql -h mysql-dev.wandermaia.com -P 3306 -udbuser -pdbpassword -D mydb

aws eks --region us-east-1 update-kubeconfig --name eks-dev




ACtions AWS

https://github.com/marketplace?query=aws-actions


+++++++++++++++++++++++++++++++++++++++++++++


ALB com EKS.

https://repost.aws/pt/knowledge-center/eks-alb-ingress-controller-setup
https://aws.amazon.com/pt/blogs/opensource/kubernetes-ingress-aws-alb-ingress-controller/

kubectl delete -f https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/refs/tags/v2.6.2/docs/examples/2048/2048_full.yaml
kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/refs/tags/v2.6.2/docs/examples/2048/2048_full.yaml



https://repost.aws/pt/knowledge-center/waf-restrict-alb-allow-cloudfront






https://docs.aws.amazon.com/pt_br/vpc/latest/userguide/working-with-aws-managed-prefix-lists.html#use-aws-managed-prefix-list


https://cloudonaut.io/cloudfront-prefix-list-security-group/

https://aws.amazon.com/pt/blogs/networking-and-content-delivery/limit-access-to-your-origins-using-the-aws-managed-prefix-list-for-amazon-cloudfront/



Se funcionar, esse é top
Esse é para devfinir conteudo privado como oriem do cloudfront. TEM QUE ESTAR EM REGIÃO COMPATÍVEL
https://docs.aws.amazon.com/pt_br/AmazonCloudFront/latest/DeveloperGuide/private-content-vpc-origins.html


Bom exemplo para restringir ip por orgintes de vpc. Funciona perfeitamente e já está no terraform. 
Porém, ele ultrapassa a quantidade de IPs permitidos para o security group. Tem que solicitar a aws para aumentar o limite.
https://airwalkreply.com/how-to-restrict-incoming-aws-alb-traffic-to-cloudfront-ip-ranges-only


Tabela de Regiões da AWS que permitem o uso de origens de VPC
https://docs.aws.amazon.com/pt_br/AmazonCloudFront/latest/DeveloperGuide/private-content-vpc-origins.html#vpc-origins-supported-regions



+++++++++++++++++++++++++++++++++++++++

github actions



Mostra bem a parte da integração, mas não é suficiente.
https://dev.to/aws-builders/securely-access-amazon-eks-with-github-actions-and-openid-connect-2im2

Automate Docker image builds and pushes to dual container registries (ECR and Docker Hub) in one go using GitHub Actions
https://dev.to/aws-builders/automate-docker-image-builds-and-push-to-dual-container-registries-ecr-and-docker-hub-in-one-push-using-github-actions-2m82



Setting Up a CI/CD Pipeline with GitHub Actions, DockerHub, and Kubernetes
https://medium.com/@jaymesonmendes/setting-up-a-ci-cd-pipeline-with-github-actions-dockerhub-and-kubernetes-04b147867907




https://dlmade.medium.com/ci-cd-with-github-action-and-aws-eks-5fd9714010cd


https://www.youtube.com/watch?v=uW-UxGCOSA8


Como criar uma pipeline CI/CD com GitHub Actions | #DevOpsNaVeia 003
https://youtu.be/TKwXC5qSjkE?t=3417


++++++++++++++++++++++++++++++++++++++++


https://github.com/infracost/infracost



++++++++++++++++++++++++

free tier

RDS
Serviço de banco de dados relacional gerenciado para MySQL, PostgreSQL, MariaDB ou SQL Server.

750 horas de uso de instâncias db.t2.micro, db.t3.micro e db.t4g.micro mono-AZ do Amazon RDS que executam bancos de dados MySQL, MariaDB e PostgreSQL 


https://spacelift.io/blog/terraform-aws-rds



ec2

750 horas por mês de instância t2.micro ou t3.micro Linux, RHEL ou SLES, dependendo da região
750 horas por mês de instância t2.micro ou t3.micro Windows, dependendo da região


teste