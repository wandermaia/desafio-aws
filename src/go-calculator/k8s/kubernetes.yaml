apiVersion: apps/v1
kind: Deployment
metadata:
  name: golang-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: golang-api
  template:
    metadata:
      labels:
        app: golang-api
    spec:
      containers:
        - name: golang-api
          image: golang-api:latest
          ports:
            - containerPort: 8080
          env:
            - name: DB_USER
              value: "user"
            - name: DB_PASSWORD
              value: "password"
            - name: DB_HOST
              value: "db"
            - name: DB_NAME
              value: "golang_api"
---
apiVersion: v1
kind: Service
metadata:
  name: golang-api
spec:
  selector:
    app: golang-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: your-frontend-image
        ports:
        - containerPort: 7000
        env:
        - name: API_URL
          value: "http://api-service:7000/backend"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 7000
  type: LoadBalancer